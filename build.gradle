plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'war'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("com.github.mwiede:jsch:2.27.0")
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}
bootWar {
    enabled = true
}

// Task to build frontend and copy to static resources
// Assumes Node.js and npm are installed

def frontendDir = "$rootDir/frontend"
def frontendBuildDir = "$frontendDir/dist"
def backendStaticDir = "$projectDir/src/main/resources/static"

task buildFrontend(type: Exec) {
    workingDir frontendDir
    commandLine 'npm', 'install'
}

task buildFrontendProd(type: Exec, dependsOn: buildFrontend) {
    workingDir frontendDir
    commandLine 'npm', 'run', 'build'
}

task copyFrontendToStatic(type: Copy, dependsOn: buildFrontendProd) {
    from frontendBuildDir
    into backendStaticDir
}

processResources.dependsOn copyFrontendToStatic
